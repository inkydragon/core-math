pretty = proc(u) {
  return ~(floor(u*1000)/1000);
};

// display = hexadecimal;

n = 9;
P = 128;
N = 1;

d = [-0.0001221,0.0001221];
f = 1;
w = 1/log(1+x);
p = remez(f, n, d, w);
// use precision 128 for the first coefficients, then precision 64
Q = fpminimax(log(1+x), [|1,2,3,4,5,6,7,8,9|], [|1,P,P,P,P,64...|], d, relative, floating, 0, p);
e = -log2(dirtyinfnorm(Q * w - f, d));
print ("log(1 + x) :\n  P(x) =", Q);

print ("relative precision:", pretty(e));
e = -log2(dirtyinfnorm(Q - log(1+x), d));
print ("absolute precision:", pretty(e), "\n");

n = 7;
d = [-0.00016923,0.00016923];
f = 1;
w = 1/exp(x);
p = remez(f, n, d, w);
Q = horner(fpminimax(exp(x), n, [|P,P,P,P,64...|], d, relative, floating, 0, p));
e = -log2(dirtyinfnorm(Q * w - f, d));
print ("exp(x) :\n  Q(x) =", Q);

print ("  precision:", pretty(e));
